/*
 * Copyright (C) 2021 The Zion Authors
 * This file is part of The Zion library.
 *
 * The Zion is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Zion is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with The Zion.  If not, see <http://www.gnu.org/licenses/>.
 */

package helper

import (
	"encoding/json"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/internal/ethapi"
)

func TestVerifyAccountResult(t *testing.T) {
	headerJson := `{"parentHash":"0xc4daea63055c5364fb42cb45c7f6eebf3277451c8d8ac984084e143b8c85c26d","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","miner":"0x8c09d936a1b408d6e0afaa537ba4e06c4504a0ae","stateRoot":"0x7f13d3173193b206527ff06ec2defb2cb79dd30fa09eba1c741a24aa71ad19f9","transactionsRoot":"0x41985aa48725b27456004e7596e64ccdaeb66ae38b5c42cdcc599072a123d566","receiptsRoot":"0x056b23fbba480696b65fe5a59b8f2148a1299103c4f57df839233af2cf4ca2d2","logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","difficulty":"0x1","number":"0xa933b","gasLimit":"0x7a1200","gasUsed":"0x5208","timestamp":"0x618262de","extraData":"0x0000000000000000000000000000000000000000000000000000000000000000f90197c0b841d68c498ce9f44f82cfd0aedba61701516858d8db76d991e07daf080cf24835991ceae0eaa46220db3087ccea3692cbd4ab50019ad1369608e6d74747fc52e0a701f9014fb841fc08d7eb36cb49673b8526bf680f3ce2bddadcd11623d4e69a3c7c3ce98ff94861e6efcec0a34451404eac2ae63e599c747c41d351da80b818ac8b2fe29d004100b841be610bc5e49b1b1f5e4330dcce624f05f3c4f9fd58563edf2edda5370f093e6c62c6c4f42538dc34eead3ee848ee92d4ebad9f4116d02922369b15e250ed426e00b8419056e2c70f710717333afc7879860cbe84cd43426c07c2e60b62f273494d4dba6d7845250b15933681a9d0c0a59c37e8bb91d5804131d110065a2b1885e4e66600b841e2348610285a035b89dbbc0dfb4b88b62c90b085839eb57bfb1e60c83edb0a052462c22bc50549b02703d71ec8cb7a3c1ad015979d5e913f2a6507d8f94e940b00b8415706cd4cd259665ec1987d2bf42a776dd90681478c19ee6c03444fa131d4fcef0a4d3ae1f9649fec11db195cbf3759c54a225a51b914bfc7ea1d518eded83e400080","mixHash":"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365","nonce":"0x0000000000000000","hash":"0xe71005f3dea6edde3adcb5c4d95413d37bdbcc8c1ae136747cd5905a18081ec1"}`
	proofJson := `{"address":"0x7559968a6395d67d1b14a33e461a07837fc76534","accountProof":["0xf90211a0dc645c1bc408c7455f7148dd7d0bdadc4828a3d68cec2a894cee43b04a8c6371a0b2d9749426507e67698679359be1f6465f9bc6c37232c4fd8aa4f8d5e69e79dea042171732bfeae1d9d706633b40137c6ce0c4cdcc8f3c64869247e183b2d7b41ea0fa6777985694d2c92862eceb62c50994aec2a5b77b75d9d6e4e6fbe4a21fc92fa09c689b8ff30656dd6c04061996042f42e4e99475658803ed66f46e54dde8812da03d1a791ef6a1e74dde297afbc721c8cc9630852676c8925bcbd8d65aa3ea7f6aa009461bf87644c5065244d7ab3cfd56b9770621cde1d443e75d789de64b7d162aa0073b6b94eebfc830252ce6acadac4698b9cf60acf8ec1fecd15066c7e5684bc8a0ff85ebfa2dd7a4eb5895861f4756db8739c509ee4a8944294ea748cdc7f1a88ca08ba8c6a349cc7088884c2d5c7d5f7cc31e2d8e5774aa7c8d92085366ab9c5553a0ef4f0a8df0a0793735df3123c78f6cfb72907940efdacf35a7717ccd431b70f8a0f3570db8b65c9dbda26648386018d8d28947b34ede83c2318a36437a9c17571ca0b560872d03afb2de3dd5664298524b092846e2fc297af7682cd39cfb3a16e892a0e7f9d44e75ce1ead9eab9eb4b9d34e960f37a0da3f7abff8ada31f323eb8f465a06844be9ba9b1a11bcba38962212457dad2a234ad4267859fd088ae10a9cef6aea0d3701d759ded6f12cb8cc69c67daf9ebd6854de2065653d65aa17b034dbdce0080","0xf901f1a037121ae504f846cc7feec07fce5bb8a484f14a87ea89a34d7852f1b8f906220aa0c5724ef803e16fbaadcb01fb53d71047614f87456d0940f840323f5b00b51ba4a0384183443feade18a1c4c32985076d4a476f1d8df6fe3d6a5ceb122aeac47683a0f3011005e25a4f657a66279d3476644bbe9a0190f4573bf9dc0ac94ca3b0071ea02be843a7b9919b3c983adf75bc97b88725c010271687547e2a2621a2f8572076a0065494029df72cdb469b6fa0a4a0dfb71cf81d23252b50b402a34b3b769964cfa0f629bcfa2e70e49819c05c567f1b493b07757ae408ad4f3b07d7fca85def010aa0dc3cef685c9d54a52856ae48d38834fa5166f5efaa86ec105d3263efd52d7016a0dcfe9cecc57294fcb25c20000f3a4a376fd90ac2edced927d19b051e09468578a04db064a86a09a7838b3ce7b690c7277f752319f9072aee642d958e8a80ef416ea0d10d5c56904ba0769e94b473472d95daa28487f55211b30aafde658c2deec48da05190053527e9b10ebfa1855e7049c54ae1da76650e122d3197520caf1e0ec45aa0767ea183e6bedb588f3341b2be3a4e732a6b7470b10a4e9cfdedcee9d93b4b42a0f5a3e1ae905310644a810d05d416ae27ecf821bb50a582628fa43bb3afa30a43a034802e794acdc4514d37ddf08648170cbb0e4d545c0c999e11cb2e55734df85a8080","0xf8d18080a08dc3fbeb5b35dbef92d1378c7ba8f20d894d4df739df7492dcd74fb96790704280808080a007551a8a7efd604c4437ddab5c08750f6a79926321e8c74fc9c0a8913d5ec3c0a022784e544b94f8f5f1626286113721efbcf30556a4886c2b233f5fd3c77c2134a0d11d6371f79aea13fc89c3c389f167cb54f012f172d91efd491ec5c60b946048a0906553817ed69ff29645fd05ba32d7418b5217c5aabc6ae7e5b098e5a3de9d8180a087968c8af6e9b8931ea798f9584bbc75597ce8dfead3c1b7634cd9b4f26559b280808080","0xf8729f3d23679c94d1d1529982d63fab85ee7275fd777d7e61214c4f4723068921dbb850f84e808a043c33c1937564800000a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"],"balance":"0x43c33c1937564800000","codeHash":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nonce":"0x0","storageHash":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","storageProof":[{"key":"0x439d23679c94d1d1529982d63fab85ee7275fd777d7e61214c4f4723068921db","value":"0x0","proof":[]}]}`

	header := new(types.Header)
	if err := header.UnmarshalJSON([]byte(headerJson)); err != nil {
		t.Fatal(err)
	}

	var proof ethapi.AccountResult
	if err := json.Unmarshal([]byte(proofJson), &proof); err != nil {
		t.Fatal(err)
	}

	user := common.HexToAddress("0x7559968a6395d67d1b14a33e461a07837fc76534")
	if _, err := VerifyAccountResult(&proof, header, user); err != nil {
		t.Fatal(err)
	}
}
